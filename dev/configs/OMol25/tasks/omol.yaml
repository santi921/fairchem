- _target_: fairchem.core.units.mlip_unit.mlip_unit.Task
  name: omol_energy
  level: system
  property: energy
  loss_fn:
    _target_: fairchem.core.modules.loss.DDPMTLoss
    loss_fn:
      _target_: fairchem.core.modules.loss.PerAtomMAELoss
    coefficient: ${omol_energy_coef}
  out_spec:
    dim: [1]
    dtype: float32
  normalizer:
    _target_: fairchem.core.modules.normalization.normalizer.Normalizer
    mean: 0.0
    rmsd: ${normalizer_rmsd}
  element_references:
    _target_: fairchem.core.modules.normalization.element_references.ElementReferences
    element_references:
      # do to the scale of the numbers this needs to be a double
      _target_: torch.DoubleTensor
      _args_:
        - ${element_refs.omol_elem_refs}
  datasets:
    - omol
  metrics:
    - mae
    - per_atom_mae
- _target_: fairchem.core.units.mlip_unit.mlip_unit.Task
  name: omol_forces
  level: atom
  property: forces
  train_on_free_atoms: True
  eval_on_free_atoms: True
  loss_fn:
    _target_: fairchem.core.modules.loss.DDPMTLoss
    loss_fn:
      _target_: fairchem.core.modules.loss.L2NormLoss
    reduction: per_structure
    coefficient: ${omol_forces_coef}
  out_spec:
    dim: [3]
    dtype: float32
  normalizer:
    _target_: fairchem.core.modules.normalization.normalizer.Normalizer
    mean: 0.0
    rmsd: ${normalizer_rmsd}
  datasets:
    - omol
  metrics:
    - mae
    - cosine_similarity
    - magnitude_error
